/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { CombatLib, CombatLibInterface } from "../../src/CombatLib";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "teamId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "apeId",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "health",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "strength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "speed",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isDead",
            type: "bool",
          },
        ],
        internalType: "struct MekaApe",
        name: "attacker",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "teamId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "apeId",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "health",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "strength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "speed",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isDead",
            type: "bool",
          },
        ],
        internalType: "struct MekaApe",
        name: "defender",
        type: "tuple",
      },
    ],
    name: "calculateDamage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "teamId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "apeId",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "health",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "strength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "speed",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isDead",
            type: "bool",
          },
        ],
        internalType: "struct MekaApe[]",
        name: "oogas",
        type: "tuple[]",
      },
    ],
    name: "getOogaById",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "teamId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "apeId",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "health",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "strength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "speed",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isDead",
            type: "bool",
          },
        ],
        internalType: "struct MekaApe",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x610e87610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80630f717a52146100505780634f26ffec14610080578063750b1c56146100b0575b600080fd5b61006a60048036038101906100659190610a43565b6100ed565b6040516100779190610b47565b60405180910390f35b61009a60048036038101906100959190610b62565b610164565b6040516100a79190610bb2565b60405180910390f35b8180156100bc57600080fd5b506100d760048036038101906100d29190610bcd565b610173565b6040516100e49190610bb2565b60405180910390f35b6100f561071b565b60005b825181101561015c578383828151811061011557610114610c58565b5b602002602001015160200151036101495782818151811061013957610138610c58565b5b602002602001015191505061015e565b808061015490610cb6565b9150506100f8565b505b92915050565b60008260600151905092915050565b60008060009050606060005b86518110156101d45786818151811061019b5761019a610c58565b5b60200260200101518282815181106101b6576101b5610c58565b5b602002602001018190525080806101cc90610cb6565b91505061017f565b5060005b855181101561022d578581815181106101f4576101f3610c58565b5b602002602001015182828151811061020f5761020e610c58565b5b6020026020010181905250808061022590610cb6565b9150506101d8565b5061023661071b565b5b600a838061024490610cb6565b945010156103075760005b825181101561029f5782818151811061026b5761026a610c58565b5b602002602001015191508160a0015161028c5761028a82848a8a610316565b505b808061029790610cb6565b91505061024f565b5060006102eb83896000815181106102ba576102b9610c58565b5b602002602001015160000151896000815181106102da576102d9610c58565b5b6020026020010151600001516104c3565b905060008114610301578094505050505061030f565b50610237565b600093505050505b9392505050565b606061032061071b565b8360008151811061033457610333610c58565b5b60200260200101516000015186600001510361035a5761035383610579565b9050610366565b61036384610579565b90505b60006001905060008167ffffffffffffffff811115610388576103876107ed565b5b6040519080825280602002602001820160405280156103c157816020015b6103ae610753565b8152602001906001900390816103a65790505b5090506000808390505b600081806103d890610cfe565b925013156104b35760006103ec8b87610164565b90506000600167ffffffffffffffff81111561040b5761040a6107ed565b5b6040519080825280602002602001820160405280156104395781602001602082028036833780820191505090505b50905086602001518160008151811061045557610454610c58565b5b60200260200101818152505060006104748d60200151836000866105ed565b90508086868061048390610cb6565b97508151811061049657610495610c58565b5b60200260200101819052506104ab818d610638565b5050506103cb565b8295505050505050949350505050565b600080600080600090505b8651811015610541578681815181106104ea576104e9610c58565b5b602002602001015160a0015161052e578587828151811061050e5761050d610c58565b5b60200260200101516000015103610528576001925061052d565b600191505b5b808061053990610cb6565b9150506104ce565b5081801561054c5750805b1561055c57600092505050610572565b811561056c578492505050610572565b83925050505b9392505050565b61058161071b565b60005b82518110156105e6578281815181106105a05761059f610c58565b5b602002602001015160a001516105d3578281815181106105c3576105c2610c58565b5b60200260200101519150506105e8565b80806105de90610cb6565b915050610584565b505b919050565b6105f5610753565b6000604051806080016040528087815260200186815260200184815260200185600181111561062757610626610d46565b5b815250905080915050949350505050565b60005b8260200151518110156107165760006106728460200151838151811061066457610663610c58565b5b6020026020010151846100ed565b90508060a00151156106845750610703565b6000846040015190506001808111156106a05761069f610d46565b5b856060015160018111156106b7576106b6610d46565b5b036106c957806106c690610d75565b90505b80826040018181516106db9190610dbd565b9150818152505060008260400151136107005760018260a00190151590811515815250505b50505b808061070e90610cb6565b91505061063b565b505050565b6040518060c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b60405180608001604052806000815260200160608152602001600081526020016000600181111561078757610786610d46565b5b81525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6107b4816107a1565b81146107bf57600080fd5b50565b6000813590506107d1816107ab565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610825826107dc565b810181811067ffffffffffffffff82111715610844576108436107ed565b5b80604052505050565b600061085761078d565b9050610863828261081c565b919050565b600067ffffffffffffffff821115610883576108826107ed565b5b602082029050602081019050919050565b600080fd5b600080fd5b6000819050919050565b6108b18161089e565b81146108bc57600080fd5b50565b6000813590506108ce816108a8565b92915050565b60008115159050919050565b6108e9816108d4565b81146108f457600080fd5b50565b600081359050610906816108e0565b92915050565b600060c0828403121561092257610921610899565b5b61092c60c061084d565b9050600061093c848285016107c2565b6000830152506020610950848285016107c2565b6020830152506040610964848285016108bf565b6040830152506060610978848285016107c2565b606083015250608061098c848285016107c2565b60808301525060a06109a0848285016108f7565b60a08301525092915050565b60006109bf6109ba84610868565b61084d565b90508083825260208201905060c084028301858111156109e2576109e1610894565b5b835b81811015610a0b57806109f7888261090c565b84526020840193505060c0810190506109e4565b5050509392505050565b600082601f830112610a2a57610a296107d7565b5b8135610a3a8482602086016109ac565b91505092915050565b60008060408385031215610a5a57610a59610797565b5b6000610a68858286016107c2565b925050602083013567ffffffffffffffff811115610a8957610a8861079c565b5b610a9585828601610a15565b9150509250929050565b610aa8816107a1565b82525050565b610ab78161089e565b82525050565b610ac6816108d4565b82525050565b60c082016000820151610ae26000850182610a9f565b506020820151610af56020850182610a9f565b506040820151610b086040850182610aae565b506060820151610b1b6060850182610a9f565b506080820151610b2e6080850182610a9f565b5060a0820151610b4160a0850182610abd565b50505050565b600060c082019050610b5c6000830184610acc565b92915050565b6000806101808385031215610b7a57610b79610797565b5b6000610b888582860161090c565b92505060c0610b998582860161090c565b9150509250929050565b610bac816107a1565b82525050565b6000602082019050610bc76000830184610ba3565b92915050565b600080600060608486031215610be657610be5610797565b5b600084013567ffffffffffffffff811115610c0457610c0361079c565b5b610c1086828701610a15565b935050602084013567ffffffffffffffff811115610c3157610c3061079c565b5b610c3d86828701610a15565b9250506040610c4e868287016108f7565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cc1826107a1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610cf357610cf2610c87565b5b600182019050919050565b6000610d098261089e565b91507f80000000000000000000000000000000000000000000000000000000000000008203610d3b57610d3a610c87565b5b600182039050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000610d808261089e565b91507f80000000000000000000000000000000000000000000000000000000000000008203610db257610db1610c87565b5b816000039050919050565b6000610dc88261089e565b9150610dd38361089e565b9250827f800000000000000000000000000000000000000000000000000000000000000001821260008412151615610e0e57610e0d610c87565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018213600084121615610e4657610e45610c87565b5b82820390509291505056fea2646970667358221220b5c7f345b7fccf6a330ae88f8e3a6a64f874cbedc1476eea78d7d3667c6d1acf64736f6c634300080e0033";

type CombatLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CombatLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CombatLib__factory extends ContractFactory {
  constructor(...args: CombatLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CombatLib> {
    return super.deploy(overrides || {}) as Promise<CombatLib>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CombatLib {
    return super.attach(address) as CombatLib;
  }
  override connect(signer: Signer): CombatLib__factory {
    return super.connect(signer) as CombatLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CombatLibInterface {
    return new utils.Interface(_abi) as CombatLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CombatLib {
    return new Contract(address, _abi, signerOrProvider) as CombatLib;
  }
}
