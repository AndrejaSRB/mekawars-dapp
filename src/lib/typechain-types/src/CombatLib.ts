/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../common";

export type MekaApeStruct = {
  teamId: PromiseOrValue<BigNumberish>;
  apeId: PromiseOrValue<BigNumberish>;
  health: PromiseOrValue<BigNumberish>;
  strength: PromiseOrValue<BigNumberish>;
  speed: PromiseOrValue<BigNumberish>;
  isDead: PromiseOrValue<boolean>;
};

export type MekaApeStructOutput = [
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  boolean
] & {
  teamId: BigNumber;
  apeId: BigNumber;
  health: BigNumber;
  strength: BigNumber;
  speed: BigNumber;
  isDead: boolean;
};

export interface CombatLibInterface extends utils.Interface {
  functions: {
    "calculateDamage((uint256,uint256,int256,uint256,uint256,bool),(uint256,uint256,int256,uint256,uint256,bool))": FunctionFragment;
    "getOogaById(uint256,(uint256,uint256,int256,uint256,uint256,bool)[])": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic: "calculateDamage" | "getOogaById"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "calculateDamage",
    values: [MekaApeStruct, MekaApeStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "getOogaById",
    values: [PromiseOrValue<BigNumberish>, MekaApeStruct[]]
  ): string;

  decodeFunctionResult(
    functionFragment: "calculateDamage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOogaById",
    data: BytesLike
  ): Result;

  events: {};
}

export interface CombatLib extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: CombatLibInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    calculateDamage(
      attacker: MekaApeStruct,
      defender: MekaApeStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getOogaById(
      id: PromiseOrValue<BigNumberish>,
      oogas: MekaApeStruct[],
      overrides?: CallOverrides
    ): Promise<[MekaApeStructOutput]>;
  };

  calculateDamage(
    attacker: MekaApeStruct,
    defender: MekaApeStruct,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getOogaById(
    id: PromiseOrValue<BigNumberish>,
    oogas: MekaApeStruct[],
    overrides?: CallOverrides
  ): Promise<MekaApeStructOutput>;

  callStatic: {
    calculateDamage(
      attacker: MekaApeStruct,
      defender: MekaApeStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOogaById(
      id: PromiseOrValue<BigNumberish>,
      oogas: MekaApeStruct[],
      overrides?: CallOverrides
    ): Promise<MekaApeStructOutput>;
  };

  filters: {};

  estimateGas: {
    calculateDamage(
      attacker: MekaApeStruct,
      defender: MekaApeStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOogaById(
      id: PromiseOrValue<BigNumberish>,
      oogas: MekaApeStruct[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    calculateDamage(
      attacker: MekaApeStruct,
      defender: MekaApeStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOogaById(
      id: PromiseOrValue<BigNumberish>,
      oogas: MekaApeStruct[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
